<?php
/**
 * Harapartners
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Harapartners License
 * that is bundled with this package in the file LICENSE_EE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://www.Harapartners.com/license
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@Harapartners.com so we can send you a copy immediately.
 *
 */
?>
<?php 
	$sortDate = $this->getSortDate();
	$storeId = $this->getSortStore();
	$arrayCollection = $this->loadSortCollection($sortDate, $storeId);
	$liveArray = $arrayCollection['live'];
	$upcomingArray = $arrayCollection['upcoming'];
	$eventurl = $this->getEventUrl($liveArray[0]);
	debug($eventurl);
?>
<div class="catalog-events-container">
	<div class="live-events-container">
		<p class="event-list-title"><?php echo Mage::helper('categoryevent')->__('All possible live events today') ?></p>
		<p>This list includes <strong>ALL</strong> events that are possibly live today, regardless of the hour when the event starts. Note this may be different from the content of "Today's Sales" in the frontend.</p>
		<p>"Today's Sales" is a filtered list of "All possible live events today", based on (1) whether the time (hour/minute/second) of the event passes the current time and (2) whether the event contains product.</p>
		<ul id="sortable" class="ui-sortable" >
		<?php foreach ( $liveArray as $live ):?>
			<li class="ui-state-default" id="recordsLiveArray_<?php echo $live['entity_id'];?>" >
				<?php
                    if (isset($live['thumbnail'])) {
                        $imgFile = BP.DS.'media'.DS.'catalog'.DS.'category'.DS.$live['thumbnail'];
                    } else {
                        $imgFile = BP.DS.'skin'.DS.'frontend'.DS.'enterprise'.DS.'harapartners'.DS.'images'.DS.'catalog'.DS.'product'.DS.'placeholder'.DS.'thumbnail.jpg';
                    }
                ?>
				<p class="event-name"><?php echo $live['name'] . "<br/> (" . date("m-d-Y H:i:s" , strtotime($live['event_start_date'])) .")";?></p>
				<a class="event-link" href="<?php echo $this->getEventUrl($live)?>" target='_blank'><img src="<?php echo Mage::helper('service/image')->loadImageFile($imgFile)->resize(150,173); ?>" width="150px" height="173px" alt="" /></a>
			</li>
		<?php endforeach; ?>
		</ul>
	</div>
	<div class="upcoming-events-container">
		<p class="event-list-title"><?php echo Mage::helper('categoryevent')->__('Events that starts next day (within ' . Harapartners_Categoryevent_Model_Sortentry::EVENT_CATEGORY_DATE_RANGE . ' days range )') ?></p>
		<p>This list contains <strong>ALL</strong> events that are opening soon. The content may also be different from the frontend "Upcoming Sales".</p>
		<p>"Upcoming Sales" contains a filtered list of "Events that starts next day", plus events in "All possible live events today" that are <strong>not live yet</strong>.</p>
		<ul id="sortable2">
			<?php foreach ( $upcomingArray as $up ):?>
				<li class="ui-state-default" id="recordsUpArray_<?php echo $up['entity_id'];?>">
                    <?php
                    if (isset($up['thumbnail'])) {
                        $imgFile = BP.DS.'media'.DS.'catalog'.DS.'category'.DS.$up['thumbnail'];
                    } else {
                        $imgFile = BP.DS.'skin'.DS.'frontend'.DS.'enterprise'.DS.'harapartners'.DS.'images'.DS.'catalog'.DS.'product'.DS.'placeholder'.DS.'thumbnail.jpg';
                    }
                    ?>
					<p class="event-name"><?php echo $up['name'] . "<br/> (" . date("m-d-Y H:i:s" , strtotime($up['event_start_date'])) .")";?></p>
					<a class="event-link" href="<?php echo $this->getEventUrl($up)?>" target='_blank'><img src="<?php echo Mage::helper('service/image')->loadImageFile($imgFile)->resize(150,173); ?>" width="150px" height="173px" alt="" /></a>
				</li>
			<?php endforeach; ?>
		</ul>
	</div>
	<div class="control-button-set">
		<button id="sort-order-submit" class="scalable" type="button" onclick="saveOrderSubmit();">
			<span><?php echo Mage::helper('categoryevent')->__('Save Sort') ?></span>
		</button>
		<button id="sort-rebuild-submit" class="scalable" type="button" onclick="rebuildSubmit();">
			<span><?php echo Mage::helper('categoryevent')->__('Rebuild Sort') ?></span>
		</button>
		<button id="sort-auto-submit" class="scalable" type="button" onclick="AutoSortSubmit();">
			<span><?php echo Mage::helper('categoryevent')->__('Auto Sort') ?></span>
		</button>
		<!--button id="sort-order-submit" class="scalable" type="button" onclick="alert('Flush page cache');">
			<span><?php// echo Mage::helper('categoryevent')->__('Refresh home (sales) pages immediately') ?></span>
		</button-->
	</div>
	<!--form id="sort-selection" action="" method="post">
		<label for="sort_date" ><?php// echo Mage::helper('categoryevent')->__('Preview by hour') ?></label>
		<input type="text" name="sort_date" id="datepicker" value="<?php //echo $postSortDate;?>"/>
		<input type="hidden" name="form_key" value="<?php //echo $this->getFormKey() ?>"/>
		<input type="hidden" name="sort_store" value="" id="sort_store_id"/>
		<input type="hidden" name="post_active" value="1"/>
		<button id="sort-type-submit" class="scalable" type="submit" >
			<span><?php// echo Mage::helper('categoryevent')->__('Preview') ?></span>
		</button>
		<p>Preview today's frontend home (sales) pages based on the given time</p>
	</form-->
</div>
		
<script>

	var liveorder = 0;
	var uporder = 0;
	var sortdate = '<?php echo $sortDate; ?>';
	var storeid = '<?php echo $storeId; ?>';
	
	jQuery(function() {
		jQuery( "#sortable" ).sortable({
				update: function(){
					liveorder = jQuery(this).sortable("serialize");
				}
			});
		jQuery( "#sortable" ).disableSelection();
	});

	jQuery(function() {
		jQuery( "#sortable2" ).sortable({
				update: function(){
					uporder = jQuery(this).sortable("serialize");
				}
			});
		jQuery( "#sortable2" ).disableSelection();
	});

	function saveOrderSubmit(){
		console.log(liveorder);
		var sortformkey = '<?php echo $this->getFormKey(); ?>';
		jQuery.ajax({
			type: 'POST',
			url: "<?php echo $this->getSortSavePostUrl(); ?>",
			data: "&sortdate="+sortdate+"&storeid="+storeid+"&"+liveorder+"&"+uporder+"&form_key="+sortformkey,
			dataType: "json",
			success: function(jsonResponse){
				if(jsonResponse.status){
					alert('Sort Order Saved');
					jQuery("#sort-type-submit").click();	
				}else {
					alert(jsonResponse.error_message);
				}
			}
		});
	}

	function rebuildSubmit(){
		var sortformkey = '<?php echo $this->getFormKey(); ?>';
		jQuery.ajax({
			type: 'POST',
			url: "<?php echo $this->getSortRebuildPostUrl(); ?>",
			data: "&sortdate="+sortdate+"&storeid="+storeid+"&"+liveorder+"&"+uporder+"&form_key="+sortformkey,
			dataType: "json",
			success: function(jsonResponse){
				if(jsonResponse.status){
					alert('Sort Rebuild Completed');
					jQuery("#sort-type-submit").click();					
				}else {
					alert(jsonResponse.error_message);
				}
			},
		});
	}
	function AutoSortSubmit() {
		var sortformkey = '<?php echo $this->getFormKey(); ?>';
		jQuery.ajax({
			type: 'POST',
			url: "<?php echo $this->getAutoSortPostUrl(); ?>",
			data: "&sortdate="+sortdate+"&storeid="+storeid+"&"+liveorder+"&"+uporder+"&form_key="+sortformkey,
			dataType: "json",
			success: function(jsonResponse){

				if(jsonResponse.status){
					liveids = jsonResponse.liveids;

					var livelist = jQuery('#sortable');
					var events = livelist.children('li');
					events = changeOrder(events);

					jQuery.each(events, function(index, item){
						livelist.append(item);
					});
					liveorder = livelist.sortable("serialize");
					alert('Auto Sort Completed');
					saveOrderSubmit();			
				}else {
					alert(jsonResponse.error_message);
				}
			},
		});
	}

	function changeOrder(events) {
		events.sort(function(left,right){
			leftid = jQuery(left).attr('id');
			leftid = leftid.substr(17);
			leftid_pos = liveids.indexOf(leftid);

			rightid = jQuery(right).attr('id');
			rightid = rightid.substr(17);
			rightid_pos = liveids.indexOf(rightid);
			return (leftid_pos < rightid_pos) ? -1 : (leftid_pos > rightid_pos)? 1 : 0;
		});

		return events;
	}
</script>