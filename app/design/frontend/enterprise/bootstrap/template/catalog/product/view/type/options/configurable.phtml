<?php
/**
 * Magento Enterprise Edition
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Magento Enterprise Edition License
 * that is bundled with this package in the file LICENSE_EE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://www.magentocommerce.com/license/enterprise-edition
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     base_default
 * @copyright   Copyright (c) 2011 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://www.magentocommerce.com/license/enterprise-edition
 */
?>
<?php
$_product    = $this->getProduct();
$_attributes = Mage::helper('core')->decorateArray($this->getAllowAttributes());
$storeId = Mage::app()->getStore()->getId();
$buttonColor = array();

/*
 * @GOTCHA
 * Not sure why we check storeId to set colors (mamasource?) but colors should be set via CSS classes, not inline styles
 * Updating inline JS (which should also be externalize…) with proper '.addClass' / '.removeClass' methods
 */
if($storeId ==1)
{
	$buttonColor['deactive'] = '#AAAAAA';
	$buttonColor['active'] = '#ED1C25';
}
else{
	$buttonColor['deactive'] = '#AAAAAA';
	$buttonColor['active'] = '#DE6076';	
}
?>
<?php if ($_product->isSaleable() && count($_attributes)):?>
    <div>
    <?php $counter = 0;?>
    <?php foreach ($_attributes as $_attribute): ?>
        <div <?php if ($_attribute->decoratedIsLast) {?> class="last"<?php }?>>
            <div class="input-box">
            	<label id="activechange<?php echo $counter;?>" for="super_attribute<?php echo $_attribute->getAttributeId() ?>">
            	    <?php echo $this->__('Select ').'<span>'.$_attribute->getLabel().'</span>'.$this->__(', please…') ?></label>
                <select name="super_attribute[<?php echo $_attribute->getAttributeId() ?>]" id="attribute<?php echo $_attribute->getAttributeId() ?>" class="required-entry super-attribute-select">
                    <option><?php echo $this->__('Please Select ').$_attribute->getLabel() ?></option>
                </select>
            </div>
        </div>

        <script type="text/javascript">
		jQuery(document).ready( function() {
				jQuery("button.btn-cart").addClass('btn-nogo');
				var selector_span_<?php echo $counter;?> = "#activechange<?php echo $counter;?>";
				var selector_select_<?php echo $counter;?> = "#attribute<?php echo $_attribute->getAttributeId()?>";
				jQuery(selector_select_<?php echo $counter;?>).change(function(){
						if ( jQuery(this).val() !== ''){
							jQuery("button.btn-cart").removeClass('btn-nogo');
						}
				});
		})
        </script>
        <?php $counter++; ?>
    <?php endforeach; ?>
    </div>
    <script type="text/javascript">
        var spConfig = new Product.Config(<?php echo $this->getJsonConfig() ?>);

        if (jQuery('#product-options-wrapper .input-box').size() > 1) {
            jQuery('#product-options-wrapper .input-box:first select').val(jQuery('#product-options-wrapper .input-box:first select > option:last').val());
            spConfig.configureElement(jQuery('#product-options-wrapper .input-box:first select').get(0));
        }

        jQuery('#product-options-wrapper .input-box').each(function() {
            var $attr = jQuery(this);

            if ($attr.find('select > option').size() == 2) {
                var attrName = $attr.find('label > span').text(),
                    attrVal  = $attr.find('select > option:last').text();

                $attr.children('select, label').hide();

                $attr.append("<p>" + attrName + ": " + attrVal + "</p>");
            } else {
                var $radioGroup = jQuery('<div></div>').addClass('radio-group');

                $attr.find('select > option').slice(1).each(function() {
                    var $item = jQuery(this),
                        namePrefix = $attr.children('select').attr('id'),
                        $radio = jQuery('<input/>')
                            .attr('name', namePrefix + '_radiogroup')
                            .attr('type', 'radio'),
                        $label = jQuery('<label/>')
                            .append($radio)
                            .append($item.text());

                    $radio.click(function() {
                        jQuery(this).parent().parent().siblings('select').get(0).selectedIndex = jQuery(this).parent().index() + 1;
                    });

                    $radioGroup.append($label);
                });

                $attr.children('select').hide();

                $attr.append($radioGroup);
            }
        });
    </script>
    
<?php endif;?>